{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CVAPandMappings","provenance":[],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"qNNRsqw6ojzg"},"source":["# Installing and importing dependencies\n","Also loads files into python objects"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_wN8F2kDC5tg","executionInfo":{"status":"ok","timestamp":1638515137667,"user_tz":300,"elapsed":8222,"user":{"displayName":"Mehdad Zaman","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh14KG53wNBm1_2fHUEmwQNHa-ZQY4I-mn0ci1Y=s64","userId":"11637010539606383424"}},"outputId":"131a10a3-9f9d-4b25-c94f-23fdc8041623"},"source":["!pip install shapely\n","!pip install turfpy"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: shapely in /usr/local/lib/python3.7/dist-packages (1.8.0)\n","Collecting turfpy\n","  Downloading turfpy-0.0.7.tar.gz (37 kB)\n","Collecting geojson\n","  Downloading geojson-2.5.0-py2.py3-none-any.whl (14 kB)\n","Requirement already satisfied: shapely in /usr/local/lib/python3.7/dist-packages (from turfpy) (1.8.0)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from turfpy) (1.4.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from turfpy) (1.19.5)\n","Building wheels for collected packages: turfpy\n","  Building wheel for turfpy (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for turfpy: filename=turfpy-0.0.7-py3-none-any.whl size=39119 sha256=9a38a08a0b4242b9b48fe8c51ee7f2ebd86d02352643ca8ce6255cbd562ded90\n","  Stored in directory: /root/.cache/pip/wheels/56/d0/d8/13858feab5280185516cd22df1adc0f75426968815b057dc5e\n","Successfully built turfpy\n","Installing collected packages: geojson, turfpy\n","Successfully installed geojson-2.5.0 turfpy-0.0.7\n"]}]},{"cell_type":"code","metadata":{"id":"SRsZQL1TI4hM"},"source":["import json\n","import csv \n","from turfpy import measurement\n","from geojson import Point, Feature, Polygon, MultiPolygon\n","from turfpy.measurement import boolean_point_in_polygon"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5OBee1JQDJIk"},"source":[""]},{"cell_type":"code","metadata":{"id":"byq6o-9DI9V2"},"source":["precincts = json.load(open('utahPrecincts.json'))\n","censusBlocks = json.load(open('utahCensusBlocks.json'))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-vMzbHWlqD2Y"},"source":["# Adding CVAP data into dictionary"]},{"cell_type":"code","metadata":{"id":"Mij3CGCDkur2"},"source":["# adding CVAP data into dictionary\n","cvapDict = {}\n","with open('ut_cvap_2019_2020_b.csv', mode='r') as cvapFile:\n","  next(cvapFile)\n","  csvReader = csv.reader(cvapFile)\n","  for line in csvReader:\n","    entry = {}\n","    entry['CVAP_TOTAL'] = float(line[1])\n","    entry['CVAP_AMERICANINDIAN'] = float(line[3])\n","    entry['CVAP_ASIAN'] = float(line[4])\n","    entry['CVAP_BLACK'] = float(line[5])\n","    entry['CVAP_HAIWAIIAN'] = float(line[6])\n","    entry['CVAP_WHITE'] = float(line[7])\n","    entry['CVAP_HISPANIC'] = float(line[13])\n","    entry['CVAP_OTHER'] = float(line[8]) + float(line[9]) + float(line[10]) + float(line[11]) + float(line[12])\n","    cvapDict[line[0]] = entry\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NPBOJouTsb7i"},"source":["#print(cvapDict['240010001001000'])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7fN9JddgqKH8"},"source":["# Generate Census Block to Precinct Mapping\n","# Generate CVAP and VAP data in Census Block"]},{"cell_type":"code","metadata":{"id":"5Eoi1Je6EUTL"},"source":["# For each Census Block: generates PRECINCTID field for mapping, and adds CVAP data \n","for cB in censusBlocks['features']:\n","  # getting PRECINCTID field\n","  cB['properties']['PRECINCTID'] = cB['properties']['STATEFP20'] + cB['properties']['COUNTYFP20'] + cB['properties']['VTD']\n","\n","  # adding TOTAL data\n","  cB['properties']['TOTAL_TOTAL'] = cB['properties']['P0020001']\n","  cB['properties']['TOTAL_WHITE'] = cB['properties']['P0020005']\n","  cB['properties']['TOTAL_BLACK'] = cB['properties']['P0020006']\n","  cB['properties']['TOTAL_HISPANIC'] = cB['properties']['P0020002']\n","  cB['properties']['TOTAL_AMERICANINDIAN'] = cB['properties']['P0020007']\n","  cB['properties']['TOTAL_ASIAN'] = cB['properties']['P0020008']\n","  cB['properties']['TOTAL_HAWAIIAN'] = cB['properties']['P0020009']\n","  cB['properties']['TOTAL_OTHER'] = cB['properties']['P0020010']\n","\n","  # adding VAP data\n","  cB['properties']['VAP_TOTAL'] = cB['properties']['P0040001']\n","  cB['properties']['VAP_WHITE'] = cB['properties']['P0040005']\n","  cB['properties']['VAP_BLACK'] = cB['properties']['P0040006']\n","  cB['properties']['VAP_HISPANIC'] = cB['properties']['P0040002']\n","  cB['properties']['VAP_AMERICANINDIAN'] = cB['properties']['P0040007']\n","  cB['properties']['VAP_ASIAN'] = cB['properties']['P0040008']\n","  cB['properties']['VAP_HAWAIIAN'] = cB['properties']['P0040009']\n","  cB['properties']['VAP_OTHER'] = cB['properties']['P0040010']\n","\n","  # adding CVAP data\n","  if cB['properties']['GEOID20'] in cvapDict:\n","    entry = cvapDict[cB['properties']['GEOID20']]\n","    cB['properties']['CVAP_TOTAL'] = entry['CVAP_TOTAL']\n","    cB['properties']['CVAP_AMERICANINDIAN'] = entry['CVAP_AMERICANINDIAN']\n","    cB['properties']['CVAP_ASIAN'] = entry['CVAP_ASIAN']\n","    cB['properties']['CVAP_BLACK'] = entry['CVAP_BLACK']\n","    cB['properties']['CVAP_HAIWAIIAN'] = entry['CVAP_HAIWAIIAN']\n","    cB['properties']['CVAP_WHITE'] = entry['CVAP_WHITE']\n","    cB['properties']['CVAP_HISPANIC'] = entry['CVAP_HISPANIC']\n","    cB['properties']['CVAP_OTHER'] = entry['CVAP_OTHER']\n","  \n","  else:\n","    print(cB['properties']['GEOID20'])\n","  "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4IMGwarFF22r","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638515215011,"user_tz":300,"elapsed":149,"user":{"displayName":"Mehdad Zaman","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh14KG53wNBm1_2fHUEmwQNHa-ZQY4I-mn0ci1Y=s64","userId":"11637010539606383424"}},"outputId":"7e07f734-5d82-4ba1-9612-5c8aa2712417"},"source":["print(censusBlocks['features'][0])\n","# with open('marylandFilePostProcessing.json', 'w') as f:\n","#   json.dump(censusBlocks, f, ensure_ascii=False)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'type': 'Feature', 'geometry': {'type': 'Polygon', 'coordinates': [[[-109.824761, 40.36026], [-109.824483, 40.36026], [-109.824216, 40.360259], [-109.824069, 40.360259], [-109.823011, 40.360237999999995], [-109.822585, 40.360231999999996], [-109.822507, 40.360231], [-109.822041, 40.360233], [-109.82169, 40.360233], [-109.821271, 40.360234999999996], [-109.82064, 40.360231999999996], [-109.820291, 40.360231], [-109.820275, 40.360231], [-109.820229, 40.360231], [-109.82021399999999, 40.360231], [-109.820136, 40.360533], [-109.82013, 40.360551], [-109.820029, 40.360915999999996], [-109.819957, 40.361343999999995], [-109.820025, 40.361512], [-109.820081, 40.361647], [-109.820229, 40.361759], [-109.820315, 40.36182], [-109.820442, 40.361947], [-109.820697, 40.362097999999996], [-109.82121, 40.362373], [-109.821523, 40.362508], [-109.821736, 40.362663999999995], [-109.82202, 40.362826], [-109.822063, 40.362853], [-109.822147, 40.362697], [-109.822258, 40.362511999999995], [-109.822385, 40.36233], [-109.822525, 40.362153], [-109.82268, 40.361984], [-109.822847, 40.361821], [-109.823024, 40.361661], [-109.823211, 40.361506], [-109.824376, 40.360569999999996], [-109.824761, 40.36026]]]}, 'properties': {'STATEFP20': '49', 'COUNTYFP20': '047', 'TRACTCE20': '940201', 'BLOCKCE20': '4135', 'GEOID20': '490479402014135', 'NAME20': 'Block 4135', 'MTFCC20': 'G5040', 'FUNCSTAT20': 'S', 'ALAND20': 67739, 'AWATER20': 0, 'INTPTLAT20': '+40.3611786', 'INTPTLON20': '-109.8219209', 'FILEID': 'PLST', 'STUSAB': 'UT', 'SUMLEV': '750', 'GEOVAR': '00', 'GEOCOMP': '00', 'CHARITER': '000', 'LOGRECNO': '0102326', 'GEOID': '7500000US490479402014135', 'GEOCODE': '490479402014135', 'REGION': '4', 'DIVISION': '8', 'STATE': '49', 'STATENS': '01455989', 'COUNTY': '047', 'COUNTYCC': 'H1', 'COUNTYNS': '01448037', 'COUSUB': '93569', 'COUSUBCC': 'Z5', 'COUSUBNS': '01939427', 'CONCIT': '99999', 'CONCITCC': '99', 'CONCITNS': '99999999', 'PLACE': '99999', 'PLACECC': '99', 'PLACENS': '99999999', 'TRACT': '940201', 'BLKGRP': '4', 'BLOCK': '4135', 'AIANHH': '4390', 'AIHHTLI': 'R', 'AIANHHFP': '77920', 'AIANHHCC': 'D1', 'AIANHHNS': '01448012', 'AITS': '999', 'AITSFP': '99999', 'AITSCC': '99', 'AITSNS': '99999999', 'TTRACT': 'T00400', 'TBLKGRP': 'B', 'ANRC': '99999', 'ANRCCC': '99', 'ANRCNS': '99999999', 'CBSA': '46860', 'MEMI': '2', 'CSA': '999', 'METDIV': '99999', 'NECTA': '99999', 'NMEMI': '9', 'CNECTA': '999', 'NECTADIV': '99999', 'CBSAPCI': '9', 'NECTAPCI': '9', 'CD116': '01', 'SLDU18': '026', 'SLDL18': '055', 'VTD': 'FD0018', 'VTDI': 'P', 'SDELM': '99999', 'SDSEC': '99999', 'SDUNI': '01080', 'AREALAND': 67739, 'AREAWATR': 0, 'BASENAME': '4135', 'NAME': 'Block 4135', 'FUNCSTAT': 'S', 'POP100': 0, 'HU100': 1, 'INTPTLAT': '+40.3611786', 'INTPTLON': '-109.8219209', 'LSADC': 'BK', 'UGA': '99999', 'P0010001': 0, 'P0010002': 0, 'P0010003': 0, 'P0010004': 0, 'P0010005': 0, 'P0010006': 0, 'P0010007': 0, 'P0010008': 0, 'P0010009': 0, 'P0010010': 0, 'P0010011': 0, 'P0010012': 0, 'P0010013': 0, 'P0010014': 0, 'P0010015': 0, 'P0010016': 0, 'P0010017': 0, 'P0010018': 0, 'P0010019': 0, 'P0010020': 0, 'P0010021': 0, 'P0010022': 0, 'P0010023': 0, 'P0010024': 0, 'P0010025': 0, 'P0010026': 0, 'P0010027': 0, 'P0010028': 0, 'P0010029': 0, 'P0010030': 0, 'P0010031': 0, 'P0010032': 0, 'P0010033': 0, 'P0010034': 0, 'P0010035': 0, 'P0010036': 0, 'P0010037': 0, 'P0010038': 0, 'P0010039': 0, 'P0010040': 0, 'P0010041': 0, 'P0010042': 0, 'P0010043': 0, 'P0010044': 0, 'P0010045': 0, 'P0010046': 0, 'P0010047': 0, 'P0010048': 0, 'P0010049': 0, 'P0010050': 0, 'P0010051': 0, 'P0010052': 0, 'P0010053': 0, 'P0010054': 0, 'P0010055': 0, 'P0010056': 0, 'P0010057': 0, 'P0010058': 0, 'P0010059': 0, 'P0010060': 0, 'P0010061': 0, 'P0010062': 0, 'P0010063': 0, 'P0010064': 0, 'P0010065': 0, 'P0010066': 0, 'P0010067': 0, 'P0010068': 0, 'P0010069': 0, 'P0010070': 0, 'P0010071': 0, 'P0020001': 0, 'P0020002': 0, 'P0020003': 0, 'P0020004': 0, 'P0020005': 0, 'P0020006': 0, 'P0020007': 0, 'P0020008': 0, 'P0020009': 0, 'P0020010': 0, 'P0020011': 0, 'P0020012': 0, 'P0020013': 0, 'P0020014': 0, 'P0020015': 0, 'P0020016': 0, 'P0020017': 0, 'P0020018': 0, 'P0020019': 0, 'P0020020': 0, 'P0020021': 0, 'P0020022': 0, 'P0020023': 0, 'P0020024': 0, 'P0020025': 0, 'P0020026': 0, 'P0020027': 0, 'P0020028': 0, 'P0020029': 0, 'P0020030': 0, 'P0020031': 0, 'P0020032': 0, 'P0020033': 0, 'P0020034': 0, 'P0020035': 0, 'P0020036': 0, 'P0020037': 0, 'P0020038': 0, 'P0020039': 0, 'P0020040': 0, 'P0020041': 0, 'P0020042': 0, 'P0020043': 0, 'P0020044': 0, 'P0020045': 0, 'P0020046': 0, 'P0020047': 0, 'P0020048': 0, 'P0020049': 0, 'P0020050': 0, 'P0020051': 0, 'P0020052': 0, 'P0020053': 0, 'P0020054': 0, 'P0020055': 0, 'P0020056': 0, 'P0020057': 0, 'P0020058': 0, 'P0020059': 0, 'P0020060': 0, 'P0020061': 0, 'P0020062': 0, 'P0020063': 0, 'P0020064': 0, 'P0020065': 0, 'P0020066': 0, 'P0020067': 0, 'P0020068': 0, 'P0020069': 0, 'P0020070': 0, 'P0020071': 0, 'P0020072': 0, 'P0020073': 0, 'P0030001': 0, 'P0030002': 0, 'P0030003': 0, 'P0030004': 0, 'P0030005': 0, 'P0030006': 0, 'P0030007': 0, 'P0030008': 0, 'P0030009': 0, 'P0030010': 0, 'P0030011': 0, 'P0030012': 0, 'P0030013': 0, 'P0030014': 0, 'P0030015': 0, 'P0030016': 0, 'P0030017': 0, 'P0030018': 0, 'P0030019': 0, 'P0030020': 0, 'P0030021': 0, 'P0030022': 0, 'P0030023': 0, 'P0030024': 0, 'P0030025': 0, 'P0030026': 0, 'P0030027': 0, 'P0030028': 0, 'P0030029': 0, 'P0030030': 0, 'P0030031': 0, 'P0030032': 0, 'P0030033': 0, 'P0030034': 0, 'P0030035': 0, 'P0030036': 0, 'P0030037': 0, 'P0030038': 0, 'P0030039': 0, 'P0030040': 0, 'P0030041': 0, 'P0030042': 0, 'P0030043': 0, 'P0030044': 0, 'P0030045': 0, 'P0030046': 0, 'P0030047': 0, 'P0030048': 0, 'P0030049': 0, 'P0030050': 0, 'P0030051': 0, 'P0030052': 0, 'P0030053': 0, 'P0030054': 0, 'P0030055': 0, 'P0030056': 0, 'P0030057': 0, 'P0030058': 0, 'P0030059': 0, 'P0030060': 0, 'P0030061': 0, 'P0030062': 0, 'P0030063': 0, 'P0030064': 0, 'P0030065': 0, 'P0030066': 0, 'P0030067': 0, 'P0030068': 0, 'P0030069': 0, 'P0030070': 0, 'P0030071': 0, 'P0040001': 0, 'P0040002': 0, 'P0040003': 0, 'P0040004': 0, 'P0040005': 0, 'P0040006': 0, 'P0040007': 0, 'P0040008': 0, 'P0040009': 0, 'P0040010': 0, 'P0040011': 0, 'P0040012': 0, 'P0040013': 0, 'P0040014': 0, 'P0040015': 0, 'P0040016': 0, 'P0040017': 0, 'P0040018': 0, 'P0040019': 0, 'P0040020': 0, 'P0040021': 0, 'P0040022': 0, 'P0040023': 0, 'P0040024': 0, 'P0040025': 0, 'P0040026': 0, 'P0040027': 0, 'P0040028': 0, 'P0040029': 0, 'P0040030': 0, 'P0040031': 0, 'P0040032': 0, 'P0040033': 0, 'P0040034': 0, 'P0040035': 0, 'P0040036': 0, 'P0040037': 0, 'P0040038': 0, 'P0040039': 0, 'P0040040': 0, 'P0040041': 0, 'P0040042': 0, 'P0040043': 0, 'P0040044': 0, 'P0040045': 0, 'P0040046': 0, 'P0040047': 0, 'P0040048': 0, 'P0040049': 0, 'P0040050': 0, 'P0040051': 0, 'P0040052': 0, 'P0040053': 0, 'P0040054': 0, 'P0040055': 0, 'P0040056': 0, 'P0040057': 0, 'P0040058': 0, 'P0040059': 0, 'P0040060': 0, 'P0040061': 0, 'P0040062': 0, 'P0040063': 0, 'P0040064': 0, 'P0040065': 0, 'P0040066': 0, 'P0040067': 0, 'P0040068': 0, 'P0040069': 0, 'P0040070': 0, 'P0040071': 0, 'P0040072': 0, 'P0040073': 0, 'H0010001': 1, 'H0010002': 1, 'H0010003': 0, 'P0050001': 0, 'P0050002': 0, 'P0050003': 0, 'P0050004': 0, 'P0050005': 0, 'P0050006': 0, 'P0050007': 0, 'P0050008': 0, 'P0050009': 0, 'P0050010': 0, 'PRECINCTID': '49047FD0018', 'TOTAL_TOTAL': 0, 'TOTAL_WHITE': 0, 'TOTAL_BLACK': 0, 'TOTAL_HISPANIC': 0, 'TOTAL_AMERICANINDIAN': 0, 'TOTAL_ASIAN': 0, 'TOTAL_HAWAIIAN': 0, 'TOTAL_OTHER': 0, 'VAP_TOTAL': 0, 'VAP_WHITE': 0, 'VAP_BLACK': 0, 'VAP_HISPANIC': 0, 'VAP_AMERICANINDIAN': 0, 'VAP_ASIAN': 0, 'VAP_HAWAIIAN': 0, 'VAP_OTHER': 0, 'CVAP_TOTAL': 1.74, 'CVAP_AMERICANINDIAN': 1.5, 'CVAP_ASIAN': 0.0, 'CVAP_BLACK': 0.0, 'CVAP_HAIWAIIAN': 0.0, 'CVAP_WHITE': 0.0, 'CVAP_HISPANIC': 0.0, 'CVAP_OTHER': 0.01}}\n"]}]},{"cell_type":"markdown","metadata":{"id":"zkQEOZCdqusk"},"source":["# Generate Precinct to District Mapping\n","Also aggregates total, VAP, and CVAP data into precinct level"]},{"cell_type":"code","metadata":{"id":"xri4s_scYSb9"},"source":["# For each precinct: generates District field for mapping, and aggregates census block CVAP data\n","\n","def addToField(field, p, cB): # aggregates CVAP data field into a precinct\n","  if field not in p['properties']:\n","    p['properties'][field] = cB['properties'][field]\n","  else:\n","    p['properties'][field] += cB['properties'][field]\n","\n","for p in precincts['features']:\n","  p['properties']['NUMCENSUSBLOCKS'] = 0\n","\n","  # adding TOTAL data\n","  p['properties']['TOTAL_TOTAL'] = p['properties']['P0020001']\n","  p['properties']['TOTAL_WHITE'] = p['properties']['P0020005']\n","  p['properties']['TOTAL_BLACK'] = p['properties']['P0020006']\n","  p['properties']['TOTAL_HISPANIC'] = p['properties']['P0020002']\n","  p['properties']['TOTAL_AMERICANINDIAN'] = p['properties']['P0020007']\n","  p['properties']['TOTAL_ASIAN'] = p['properties']['P0020008']\n","  p['properties']['TOTAL_HAWAIIAN'] = p['properties']['P0020009']\n","  p['properties']['TOTAL_OTHER'] = p['properties']['P0020010']\n","\n","  # adding VAP data\n","  p['properties']['VAP_TOTAL'] = p['properties']['P0040001']\n","  p['properties']['VAP_WHITE'] = p['properties']['P0040005']\n","  p['properties']['VAP_BLACK'] = p['properties']['P0040006']\n","  p['properties']['VAP_HISPANIC'] = p['properties']['P0040002']\n","  p['properties']['VAP_AMERICANINDIAN'] = p['properties']['P0040007']\n","  p['properties']['VAP_ASIAN'] = p['properties']['P0040008']\n","  p['properties']['VAP_HAWAIIAN'] = p['properties']['P0040009']\n","  p['properties']['VAP_OTHER'] = p['properties']['P0040010']\n","\n","\n","  for cB in censusBlocks['features']:\n","    # adding Congressional District fields\n","    if 'CD116' not in p['properties'] and p['properties']['GEOID20'] == cB['properties']['PRECINCTID']:\n","      p['properties']['CD116'] = cB['properties']['CD116']\n","    # aggregating CVAP data\n","    if p['properties']['GEOID20'] == cB['properties']['PRECINCTID']:\n","      addToField('CVAP_TOTAL', p, cB)\n","      addToField('CVAP_AMERICANINDIAN', p, cB)\n","      addToField('CVAP_ASIAN', p, cB)\n","      addToField('CVAP_BLACK', p, cB)\n","      addToField('CVAP_HAIWAIIAN', p, cB)\n","      addToField('CVAP_WHITE', p, cB)\n","      addToField('CVAP_HISPANIC', p, cB)\n","      addToField('CVAP_OTHER', p, cB)\n","\n","      p['properties']['NUMCENSUSBLOCKS'] += 1\n","  \n","    # adding the GEOID20 of the censusBlock to the precinct\n","    # if 'CENSUSBLOCKS' not in p['properties']:\n","    #   p['properties']['CENSUSBLOCKS'] = [cB['properties']['GEOID20']]\n","    # else:\n","    #   p['properties']['CENSUSBLOCKS'].append(cB['properties']['GEOID20'])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ilAaX5hNrGD4"},"source":["# Write output out"]},{"cell_type":"code","metadata":{"id":"1Q6hz3VKZUyJ"},"source":["with open('utahModifiedPrecincts.json', 'w') as f:\n","  json.dump(precincts, f, ensure_ascii=False)\n","\n","with open('utahModifiedCensusBlocks.json', 'w') as f:\n","  json.dump(censusBlocks, f, ensure_ascii=False)"],"execution_count":null,"outputs":[]}]}